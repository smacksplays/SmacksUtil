# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: Publish on CurseForge [Forge & Fabric & NeoForge]
on: [ workflow_dispatch, pull_request]
env: #Environment variables that can later be referenced using ${{ env.MINECRAFT_VERSION }}. These are useful for repeating information and allow for quick changes for new mod updates
  MINECRAFT_VERSION: 1.20.4
  JAVA_VERSION: 17
  JAVA_LTS: 21
  VERSION: 0.1.0
  RELEASE_NAME: SmackUtil-1.20.4-0.0.14
  TAG: V0.1.0

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ env.JAVA_LTS }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_LTS }}
          distribution: 'microsoft'
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: publish (CurseForge Fabric)
        if: ${{ github.base_ref == 'master_1.20.4' || github.event_name == 'workflow_dispatch' }} # Only upload artifacts built from latest java on one OS
        uses: Kir-Antipov/mc-publish@v3.3.0
        with:
          curseforge-id: 952860                                             #The id of your CurseForge project
          curseforge-token: ${{ secrets.PUBLISH_CURSEFORGE_TOKEN }}

          name: SmacksUtil Fabric ${{ env.VERSION }} for MC 1.20.4
          version: smacksutil-fabric-1.20.4-${{ env.VERSION }}
          version-type: beta
          changelog-file: CHANGELOG.*

          files: |
            fabric/build/libs/*.jar

          loaders: |
            fabric

          game-versions: |
            1.20.4

      - name: publish (CurseForge Forge)
        if: ${{ github.base_ref == 'master_1.20.4' || github.event_name == 'workflow_dispatch' }} # Only upload artifacts built from latest java on one OS
        uses: Kir-Antipov/mc-publish@v3.3.0
        with:
          curseforge-id: 952860                                             #The id of your CurseForge project
          curseforge-token: ${{ secrets.PUBLISH_CURSEFORGE_TOKEN }}

          name: SmacksUtil Forge ${{ env.VERSION }} for MC 1.20.4
          version: smacksutil-forge-1.20.4-${{ env.VERSION }}
          version-type: beta
          changelog-file: CHANGELOG.*

          files: |
            forge/build/libs/*.jar

          loaders: |
            forge

          game-versions: |
            1.20.4

      - name: publish (CurseForge NeoForge)
        if: ${{ github.base_ref == 'master_1.20.4' || github.event_name == 'workflow_dispatch' }} # Only upload artifacts built from latest java on one OS
        uses: Kir-Antipov/mc-publish@v3.3.0
        with:
          curseforge-id: 952860                                             #The id of your CurseForge project
          curseforge-token: ${{ secrets.PUBLISH_CURSEFORGE_TOKEN }}

          name: SmacksUtil NeoForge ${{ env.VERSION }} for MC 1.20.4
          version: smacksutil-neoforge-1.20.4-${{ env.VERSION }}
          version-type: beta
          changelog-file: CHANGELOG.*

          files: |
            neoforge/build/libs/*.jar

          loaders: |
            neoforge

          game-versions: |
            1.20.4

      - name: Tag exists
        uses: mukunku/tag-exists-action@v1.5.0
        id: check-tag
        with:
          tag: ${{ env.TAG }}

      - name: Create Release
        if: ${{ steps.check-tag.outputs.exists == 'true' }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Test
          draft: false
          prerelease: false

      - name: Upload Fabric Files
        if: ${{ steps.check-tag.outputs.exists == 'true' }}
        id: upload_files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fabric/build/libs/*.jar
          asset_content_type: application/jar

      - name: Upload Forge Files
        if: ${{ steps.check-tag.outputs.exists == 'true' }}
        id: upload_files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: forge/build/libs/*.jar
          asset_content_type: application/jar

      - name: Upload NeoForge Files
        if: ${{ steps.check-tag.outputs.exists == 'true' }}
        id: upload_files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: neoforge/build/libs/*.jar
          asset_content_type: application/jar